name: 🚀 Auto Aziz CI/CD - Version Simplifiée

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'
  
jobs:
  # 🧪 Tests et Qualité du Code
  test:
    name: 🧪 Tests & Quality
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: autoaziz_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: 🔧 Install Backend Dependencies
        working-directory: ./backend
        run: npm ci

      - name: 🔧 Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: 🔍 Lint backend code
        working-directory: ./backend
        run: npm run lint:check

      - name: 🔍 Lint frontend code
        working-directory: ./frontend
        run: npm run lint:check || echo "⚠️ ESLint warnings found but not blocking build"

      - name: 🎨 Check Prettier formatting
        run: |
          cd backend && npm run format:check
          cd ../frontend && npm run format:check

      - name: 🧪 Backend Tests
        working-directory: ./backend
        run: npm run test
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_DATABASE: autoaziz_test

      - name: 🧪 Frontend Tests
        working-directory: ./frontend
        run: npm test -- --coverage --watchAll=false

      - name: 🏗️ Backend Build
        working-directory: ./backend
        run: npm run build

      - name: 🏗️ Frontend Build
        working-directory: ./frontend
        run: npm run build

      - name: 📊 Upload Coverage to Codecov (Optional)
        uses: codecov/codecov-action@v3
        with:
          files: ./backend/coverage/lcov.info,./frontend/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true

  # 🔒 Analyse de sécurité
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 🔧 Install Backend Dependencies
        working-directory: ./backend
        run: npm ci

      - name: 🔧 Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: 🛡️ Backend Security Audit
        working-directory: ./backend
        run: npm audit --audit-level moderate
        continue-on-error: true

      - name: 🛡️ Frontend Security Audit
        working-directory: ./frontend
        run: npm audit --audit-level moderate
        continue-on-error: true

  # 🐳 Build Docker (sans déploiement)
  docker:
    name: 🐳 Docker Build Test
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Test Backend Docker Build
        run: docker build -f backend/Dockerfile -t autoaziz-backend-test backend/

      - name: 🐳 Test Frontend Docker Build
        run: docker build -f frontend/Dockerfile -t autoaziz-frontend-test frontend/

      - name: 🧹 Cleanup Docker Images
        run: |
          docker rmi autoaziz-backend-test
          docker rmi autoaziz-frontend-test

  # ✅ Status Final
  success:
    name: ✅ All Checks Passed
    runs-on: ubuntu-latest
    needs: [test, security, docker]
    
    steps:
      - name: 🎉 Success Message
        run: |
          echo "🎉 Toutes les vérifications sont passées !"
          echo "✅ ESLint & Prettier: OK"
          echo "✅ Tests unitaires: OK"
          echo "✅ Builds: OK"
          echo "✅ Sécurité: OK"
          echo "✅ Docker: OK"
          echo ""
          echo "🚀 Votre code Auto Aziz est prêt !"